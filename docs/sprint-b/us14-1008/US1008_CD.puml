@startuml US1003_CD

class RepositoryFactory {
  + RepositoryFactory()
}

interface CourseRepository {
  {abstract} findAllOpenForEnrolment()
  {abstract} ofIdentity(code)
  {abstract} save(course)
}

class InMemoryCourseRepository {
  + findAllOpenForEnrolment()
  + ofIdentity(code)
  + save(course)
}

class JpaCourseRepository {
  + findAllOpenForEnrolment()
  + ofIdentity(code)
  + save(course)
}

interface StudentRepository {
  {abstract} findByUsername(username)
  {abstract} save(student)
}

class InMemoryStudentRepository {
  + findByUsername(username)
  + save(student)
}

class JpaStudentRepository {
  + findByUsername(username)
  + save(student)
}

interface EnrolmentRepository {
  {abstract} save(enrolment)
  {abstract} findWithUserAndCourse(user, course)
}

class InMemoryEnrolmentRepository {
  + findWithUserAndCourse(user, course)
  + save(enrolment)
}

class JpaEnrolmentRepository {
  + findWithUserAndCourse(user, course)
  + save(Enrolment)
}

class PersistenceContext {
  + repositories()
}

class ListCourseService {
  - courseRepository

  + ListCourseService(courseRepository)

  + listNotClosedCourses()
}

class RequestEnrolmentUI {}

class RequestEnrolmentController {
  - courseRepository
  - enrolmentRepository
  - studentRepository
  - listCoursesService
  - authz

  + RequestEnrolmentController(courseRepository, enrolmentRepository, studentRepository, authz)

  + listOpenForEnrolmentCourses()
  + requestEnrolment(courseDTO)
  + requestEnrolment(courseDTO, authenticatedUser)
}

class AuthorizationService {
  + ensureAuthenticatedUserHasAnyOf(...roles)
  + loggedinUserWithPermissions(...roles)
}

class Course {
  - code
  - title
  - description
  - enrolmentLimits
  - courseState
  - courseEnrolmentState
  - createdAt

  + toggleEnrolmentState()
  + toDto()
}

class Student {
  - mecanographicNumber
  - systemUser

  + toDto()
}

class EnrolmentDTO {
  - courseCode
  - studentNumber
  - studentName
  - createdAt
  - state
}

class Enrolment {
  - createdAt
  - updatedAt
  - state
  - id

  + accept()
  + reject()
  + toDto()
}

enum CourseState {
  CLOSED
  OPEN
  IN_PROGRESS
  FINISHED
}

enum CourseEnrolmentState {
  OPEN
  CLOSED
}

class CourseDTO {
  - code
  - title
  - description
  - enrolmentLimits
  - courseState
  - courseEnrolmentState
  - createdAt
}

RequestEnrolmentUI ..> RequestEnrolmentController
RequestEnrolmentUI ..> PersistenceContext
RequestEnrolmentUI ..> AuthorizationService

RequestEnrolmentController --> ListCourseService
RequestEnrolmentController --> AuthorizationService
RequestEnrolmentController ..> Enrolment
RequestEnrolmentController --> EnrolmentDTO
RequestEnrolmentController ..> EnrolmentDTO

PersistenceContext ..> RepositoryFactory
RepositoryFactory --> CourseRepository
RepositoryFactory --> EnrolmentRepository
RepositoryFactory --> StudentRepository

ListCourseService ..> Course
ListCourseService ..> CourseDTO
ListCourseService ..> CourseRepository
RequestEnrolmentController --> CourseRepository

Enrolment --> Course
Enrolment --> Student

CourseRepository <|.. InMemoryCourseRepository
CourseRepository <|.. JpaCourseRepository

EnrolmentRepository <|.. InMemoryEnrolmentRepository
EnrolmentRepository <|.. JpaEnrolmentRepository

StudentRepository <|.. InMemoryStudentRepository
StudentRepository <|.. JpaStudentRepository

Course --> CourseState
Course --> CourseEnrolmentState

@enduml
