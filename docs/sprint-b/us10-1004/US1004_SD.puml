@startuml US1004_SD
autonumber

actor "Manager" as M

participant "SetCourseStatusUI" as UI <<presentation>>
participant "SetCourseStatusController" as CTRL <<application>>
participant "Course" as Course <<domain>>
participant "CourseState" as CourseState <<domain>>

database CourseRepository as REPO <<repository>>

activate M

M -> UI: requests to open/close a course

activate UI

UI -> CTRL**: new

alt if close course
  UI -> CTRL: openCourses()
  activate CTRL
  CTRL -> REPO: openCourses()
  activate REPO
  REPO --> CTRL: courses
  deactivate REPO
  CTRL --> UI: courses
  deactivate CTRL
else if open course
  UI -> CTRL: listClosedCourses()

  activate CTRL

  CTRL -> REPO: openCourses()
  activate REPO
  REPO --> CTRL: courses
  deactivate REPO
  CTRL --> UI: courses
  deactivate CTRL
  end

UI --> M: lists the available courses and their status and asks to select one

deactivate UI

M -> UI: selects the desired course

activate UI

UI -> UI: course = get(index)


UI --> M: asks to confirm the toggle of the course status

deactivate UI

M -> UI: confirms operation

activate UI

UI -> CTRL: toggleCourseStatus(course)

alt if close course
  activate CTRL
  CTRL -> CourseState: changeToClose()
  activate CourseState
  deactivate CourseState

else if open course

  CTRL -> CourseState: changeToOpen()
  activate CourseState
  deactivate CourseState
  end


CTRL -> REPO: save(course)

activate REPO
deactivate REPO

deactivate CTRL

UI --> M: informs operation success

@enduml
