@startuml US1003_CD

class RepositoryFactory {
  + RepositoryFactory()
}

interface CourseRepository {
  {abstract} findAllNotClosed()
  {abstract} save(course)
}

class InMemoryCourseRepository {
  + findAllNotClosed()
  + save(course)
}

class JpaCourseRepository {
  + findAllNotClosed()
  + save(course)
}

class PersistenceContext {
  + repositories()
}

class CourseService {
  - courseRepository

  + CourseService(courseRepository)

  + listNotClosedCourses()
  + toggleEnrolmentState(course)
  + save(course)
}

class ManageCourseEnrolmentStateUI {}

class ManageCourseEnrolmentStateController {
  - courseRepository
  - courseService

  + ManageCourseEnrolmentStateController(courseRepository)

  + listNotClosedCourses()
  + toggleEnrolmentState(course)
}

class Course {
  - code
  - title
  - description
  - enrolmentLimits
  - courseState
  - courseEnrolmentState
  - createdAt

  + toggleEnrolmentState()
  + toDto()
}

enum CourseState {
  CLOSED
  OPEN
  IN_PROGRESS
  FINISHED
}

enum CourseEnrolmentState {
  OPEN
  CLOSED
}

class CourseDTO {
  - code
  - title
  - description
  - enrolmentLimits
  - courseState
  - courseEnrolmentState
  - createdAt
}

class CourseDTOParser {
  + valueOf(courseDTO)
}

ManageCourseEnrolmentStateUI ..> ManageCourseEnrolmentStateController
ManageCourseEnrolmentStateUI ..> PersistenceContext
ManageCourseEnrolmentStateController --> CourseService
PersistenceContext ..> RepositoryFactory
RepositoryFactory --> CourseRepository

CourseService ..> Course
ManageCourseEnrolmentStateController --> CourseRepository

CourseDTOParser ..> CourseDTO
CourseDTOParser ..> Course

CourseRepository <|.. InMemoryCourseRepository
CourseRepository <|.. JpaCourseRepository

Course --> CourseState
Course --> CourseEnrolmentState

@enduml
